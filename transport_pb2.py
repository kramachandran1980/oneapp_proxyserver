# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import device_state_events_pb2 as device__state__events__pb2
import device_state_requests_pb2 as device__state__requests__pb2
import firmware_events_pb2 as firmware__events__pb2
import firmware_requests_pb2 as firmware__requests__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='transport.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0ftransport.proto\x1a\x0c\x63ommon.proto\x1a\x19\x64\x65vice_state_events.proto\x1a\x1b\x64\x65vice_state_requests.proto\x1a\x15\x66irmware_events.proto\x1a\x17\x66irmware_requests.proto\"\x1d\n\x08Metadata\x12\x11\n\ttimestamp\x18\x01 \x01(\x01\"B\n\rRequestHeader\x12\x1b\n\x08metadata\x18\x01 \x01(\x0b\x32\t.Metadata\x12\x14\n\x0crequest_uuid\x18\x02 \x01(\t\"C\n\x0eResponseHeader\x12\x1b\n\x08metadata\x18\x01 \x01(\x0b\x32\t.Metadata\x12\x14\n\x0crequest_uuid\x18\x02 \x01(\t\">\n\x0b\x45ventHeader\x12\x1b\n\x08metadata\x18\x01 \x01(\x0b\x32\t.Metadata\x12\x12\n\nevent_uuid\x18\x02 \x01(\t\"\x8c\x01\n\x07Request\x12\x1e\n\x06header\x18\x01 \x01(\x0b\x32\x0e.RequestHeader\x12,\n\x10\x66irmware_request\x18\x02 \x01(\x0b\x32\x10.FirmwareRequestH\x00\x12(\n\x0e\x64\x65vice_request\x18\x03 \x01(\x0b\x32\x0e.DeviceRequestH\x00\x42\t\n\x07payload\"\x94\x01\n\nResponseOK\x12\x1f\n\x06header\x18\x01 \x01(\x0b\x32\x0f.ResponseHeader\x12.\n\x11\x66irmware_response\x18\x02 \x01(\x0b\x32\x11.FirmwareResponseH\x00\x12*\n\x0f\x64\x65vice_response\x18\x03 \x01(\x0b\x32\x0f.DeviceResponseH\x00\x42\t\n\x07payload\"\xb4\x01\n\rResponseError\x12\x1f\n\x06header\x18\x01 \x01(\x0b\x32\x0f.ResponseHeader\x12\x17\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x06.ErrorH\x00\x12\x30\n\x0e\x66irmware_error\x18\x03 \x01(\x0b\x32\x16.FirmwareResponseErrorH\x00\x12,\n\x0c\x64\x65vice_error\x18\x04 \x01(\x0b\x32\x14.DeviceResponseErrorH\x00\x42\t\n\x07payload\"\x80\x01\n\x05\x45vent\x12\x1c\n\x06header\x18\x01 \x01(\x0b\x32\x0c.EventHeader\x12(\n\x0e\x66irmware_event\x18\x02 \x01(\x0b\x32\x0e.FirmwareEventH\x00\x12$\n\x0c\x64\x65vice_event\x18\x03 \x01(\x0b\x32\x0c.DeviceEventH\x00\x42\t\n\x07payload\"=\n\x03\x41\x63k\x12\x1f\n\x06header\x18\x01 \x01(\x0b\x32\x0f.ResponseHeader\x12\x15\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x06.Errorb\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,device__state__events__pb2.DESCRIPTOR,device__state__requests__pb2.DESCRIPTOR,firmware__events__pb2.DESCRIPTOR,firmware__requests__pb2.DESCRIPTOR,])




_METADATA = _descriptor.Descriptor(
  name='Metadata',
  full_name='Metadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Metadata.timestamp', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=166,
)


_REQUESTHEADER = _descriptor.Descriptor(
  name='RequestHeader',
  full_name='RequestHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metadata', full_name='RequestHeader.metadata', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_uuid', full_name='RequestHeader.request_uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=234,
)


_RESPONSEHEADER = _descriptor.Descriptor(
  name='ResponseHeader',
  full_name='ResponseHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metadata', full_name='ResponseHeader.metadata', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_uuid', full_name='ResponseHeader.request_uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=303,
)


_EVENTHEADER = _descriptor.Descriptor(
  name='EventHeader',
  full_name='EventHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metadata', full_name='EventHeader.metadata', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='event_uuid', full_name='EventHeader.event_uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=305,
  serialized_end=367,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Request.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_request', full_name='Request.firmware_request', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_request', full_name='Request.device_request', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Request.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=370,
  serialized_end=510,
)


_RESPONSEOK = _descriptor.Descriptor(
  name='ResponseOK',
  full_name='ResponseOK',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='ResponseOK.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_response', full_name='ResponseOK.firmware_response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_response', full_name='ResponseOK.device_response', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='ResponseOK.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=513,
  serialized_end=661,
)


_RESPONSEERROR = _descriptor.Descriptor(
  name='ResponseError',
  full_name='ResponseError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='ResponseError.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='ResponseError.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_error', full_name='ResponseError.firmware_error', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_error', full_name='ResponseError.device_error', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='ResponseError.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=664,
  serialized_end=844,
)


_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Event.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_event', full_name='Event.firmware_event', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_event', full_name='Event.device_event', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Event.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=847,
  serialized_end=975,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='Ack.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='Ack.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=977,
  serialized_end=1038,
)

_REQUESTHEADER.fields_by_name['metadata'].message_type = _METADATA
_RESPONSEHEADER.fields_by_name['metadata'].message_type = _METADATA
_EVENTHEADER.fields_by_name['metadata'].message_type = _METADATA
_REQUEST.fields_by_name['header'].message_type = _REQUESTHEADER
_REQUEST.fields_by_name['firmware_request'].message_type = firmware__requests__pb2._FIRMWAREREQUEST
_REQUEST.fields_by_name['device_request'].message_type = device__state__requests__pb2._DEVICEREQUEST
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['firmware_request'])
_REQUEST.fields_by_name['firmware_request'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['device_request'])
_REQUEST.fields_by_name['device_request'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_RESPONSEOK.fields_by_name['header'].message_type = _RESPONSEHEADER
_RESPONSEOK.fields_by_name['firmware_response'].message_type = firmware__requests__pb2._FIRMWARERESPONSE
_RESPONSEOK.fields_by_name['device_response'].message_type = device__state__requests__pb2._DEVICERESPONSE
_RESPONSEOK.oneofs_by_name['payload'].fields.append(
  _RESPONSEOK.fields_by_name['firmware_response'])
_RESPONSEOK.fields_by_name['firmware_response'].containing_oneof = _RESPONSEOK.oneofs_by_name['payload']
_RESPONSEOK.oneofs_by_name['payload'].fields.append(
  _RESPONSEOK.fields_by_name['device_response'])
_RESPONSEOK.fields_by_name['device_response'].containing_oneof = _RESPONSEOK.oneofs_by_name['payload']
_RESPONSEERROR.fields_by_name['header'].message_type = _RESPONSEHEADER
_RESPONSEERROR.fields_by_name['error'].message_type = common__pb2._ERROR
_RESPONSEERROR.fields_by_name['firmware_error'].message_type = firmware__requests__pb2._FIRMWARERESPONSEERROR
_RESPONSEERROR.fields_by_name['device_error'].message_type = device__state__requests__pb2._DEVICERESPONSEERROR
_RESPONSEERROR.oneofs_by_name['payload'].fields.append(
  _RESPONSEERROR.fields_by_name['error'])
_RESPONSEERROR.fields_by_name['error'].containing_oneof = _RESPONSEERROR.oneofs_by_name['payload']
_RESPONSEERROR.oneofs_by_name['payload'].fields.append(
  _RESPONSEERROR.fields_by_name['firmware_error'])
_RESPONSEERROR.fields_by_name['firmware_error'].containing_oneof = _RESPONSEERROR.oneofs_by_name['payload']
_RESPONSEERROR.oneofs_by_name['payload'].fields.append(
  _RESPONSEERROR.fields_by_name['device_error'])
_RESPONSEERROR.fields_by_name['device_error'].containing_oneof = _RESPONSEERROR.oneofs_by_name['payload']
_EVENT.fields_by_name['header'].message_type = _EVENTHEADER
_EVENT.fields_by_name['firmware_event'].message_type = firmware__events__pb2._FIRMWAREEVENT
_EVENT.fields_by_name['device_event'].message_type = device__state__events__pb2._DEVICEEVENT
_EVENT.oneofs_by_name['payload'].fields.append(
  _EVENT.fields_by_name['firmware_event'])
_EVENT.fields_by_name['firmware_event'].containing_oneof = _EVENT.oneofs_by_name['payload']
_EVENT.oneofs_by_name['payload'].fields.append(
  _EVENT.fields_by_name['device_event'])
_EVENT.fields_by_name['device_event'].containing_oneof = _EVENT.oneofs_by_name['payload']
_ACK.fields_by_name['header'].message_type = _RESPONSEHEADER
_ACK.fields_by_name['error'].message_type = common__pb2._ERROR
DESCRIPTOR.message_types_by_name['Metadata'] = _METADATA
DESCRIPTOR.message_types_by_name['RequestHeader'] = _REQUESTHEADER
DESCRIPTOR.message_types_by_name['ResponseHeader'] = _RESPONSEHEADER
DESCRIPTOR.message_types_by_name['EventHeader'] = _EVENTHEADER
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['ResponseOK'] = _RESPONSEOK
DESCRIPTOR.message_types_by_name['ResponseError'] = _RESPONSEERROR
DESCRIPTOR.message_types_by_name['Event'] = _EVENT
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), dict(
  DESCRIPTOR = _METADATA,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:Metadata)
  ))
_sym_db.RegisterMessage(Metadata)

RequestHeader = _reflection.GeneratedProtocolMessageType('RequestHeader', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTHEADER,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:RequestHeader)
  ))
_sym_db.RegisterMessage(RequestHeader)

ResponseHeader = _reflection.GeneratedProtocolMessageType('ResponseHeader', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEHEADER,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:ResponseHeader)
  ))
_sym_db.RegisterMessage(ResponseHeader)

EventHeader = _reflection.GeneratedProtocolMessageType('EventHeader', (_message.Message,), dict(
  DESCRIPTOR = _EVENTHEADER,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:EventHeader)
  ))
_sym_db.RegisterMessage(EventHeader)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:Request)
  ))
_sym_db.RegisterMessage(Request)

ResponseOK = _reflection.GeneratedProtocolMessageType('ResponseOK', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEOK,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:ResponseOK)
  ))
_sym_db.RegisterMessage(ResponseOK)

ResponseError = _reflection.GeneratedProtocolMessageType('ResponseError', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSEERROR,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:ResponseError)
  ))
_sym_db.RegisterMessage(ResponseError)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
  DESCRIPTOR = _EVENT,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:Event)
  ))
_sym_db.RegisterMessage(Event)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'transport_pb2'
  # @@protoc_insertion_point(class_scope:Ack)
  ))
_sym_db.RegisterMessage(Ack)


# @@protoc_insertion_point(module_scope)
